#!/bin/bash

# Script de configuration Gitea pour m√©triques Prometheus
# Usage: ./setup-gitea-metrics.sh

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${CYAN}ü¶å Configuration Gitea pour Prometheus${NC}"

# V√©rifier que Gitea est en cours d'ex√©cution
if ! docker ps --filter "name=gitea" --filter "status=running" | grep -q "gitea"; then
    echo -e "${RED}‚ùå Gitea n'est pas en cours d'ex√©cution${NC}"
    echo -e "${YELLOW}üí° D√©marrez d'abord: ./manage-stack.sh start${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Gitea d√©tect√©${NC}"

# Attendre que Gitea soit pr√™t
echo -e "${YELLOW}‚è≥ V√©rification que Gitea est pr√™t...${NC}"

max_attempts=10
attempt=1

while [[ $attempt -le $max_attempts ]]; do
    if docker exec gitea wget -q --spider http://localhost:3000 2>/dev/null; then
        echo -e "${GREEN}‚úÖ Gitea est pr√™t${NC}"
        break
    fi
    
    echo -e "${GRAY}   Tentative $attempt/$max_attempts...${NC}"
    sleep 5
    ((attempt++))
done

if [[ $attempt -gt $max_attempts ]]; then
    echo -e "${RED}‚ùå Gitea n'est pas accessible apr√®s 50 secondes${NC}"
    exit 1
fi

# V√©rifier si app.ini existe et est configur√©
if docker exec gitea test -f /data/gitea/conf/app.ini; then
    echo -e "${GREEN}‚úÖ Fichier app.ini existe${NC}"
    
    # V√©rifier si la section metrics existe d√©j√†
    if docker exec gitea grep -q "\[metrics\]" /data/gitea/conf/app.ini 2>/dev/null; then
        echo -e "${GREEN}‚úÖ Section [metrics] d√©j√† pr√©sente${NC}"
        
        # V√©rifier si ENABLED = true
        if docker exec gitea grep -A5 "\[metrics\]" /data/gitea/conf/app.ini | grep -q "ENABLED.*true" 2>/dev/null; then
            echo -e "${GREEN}‚úÖ M√©triques d√©j√† activ√©es${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  M√©triques pas activ√©es, activation...${NC}"
            
            # Activer les m√©triques
            docker exec gitea sed -i '/\[metrics\]/,/^\[/{s/ENABLED.*/ENABLED = true/}' /data/gitea/conf/app.ini
        fi
    else
        echo -e "${YELLOW}üìù Ajout de la section [metrics]...${NC}"
        
        # Ajouter la section metrics
        docker exec gitea bash -c 'echo -e "\n[metrics]\nENABLED = true\nTOKEN = prometheus-metrics-token" >> /data/gitea/conf/app.ini'
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  Fichier app.ini n'existe pas encore${NC}"
    echo -e "${CYAN}‚ÑπÔ∏è  Gitea n'est peut-√™tre pas encore configur√©${NC}"
    
    # Cr√©er le r√©pertoire de configuration s'il n'existe pas
    docker exec gitea mkdir -p /data/gitea/conf
    
    # Cr√©er un app.ini minimal avec m√©triques
    docker exec gitea bash -c 'cat > /data/gitea/conf/app.ini << EOF
[server]
ROOT_URL = https://gitea.wk-archi-o23b-4-5-g7.fr/
DOMAIN = gitea.wk-archi-o23b-4-5-g7.fr
HTTP_PORT = 3000

[database]
DB_TYPE = sqlite3

[security]
INSTALL_LOCK = false

[metrics]
ENABLED = true
TOKEN = prometheus-metrics-token

[log]
MODE = console
LEVEL = Info
EOF'
    
    echo -e "${GREEN}‚úÖ Configuration app.ini cr√©√©e${NC}"
fi

# Red√©marrer Gitea pour appliquer la configuration
echo -e "${YELLOW}üîÑ Red√©marrage de Gitea...${NC}"
docker restart gitea

# Attendre que Gitea red√©marre
echo -e "${YELLOW}‚è≥ Attente du red√©marrage (15s)...${NC}"
sleep 15

# Tester l'endpoint m√©triques
echo -e "${CYAN}üß™ Test de l'endpoint m√©triques...${NC}"

max_attempts=5
attempt=1

while [[ $attempt -le $max_attempts ]]; do
    if docker exec gitea wget -qO- "http://localhost:3000/metrics?token=prometheus-metrics-token" 2>/dev/null | head -1 | grep -q "^#"; then
        echo -e "${GREEN}‚úÖ Endpoint m√©triques accessible avec token${NC}"
        break
    elif docker exec gitea wget -qO- "http://localhost:3000/metrics" 2>/dev/null | head -1 | grep -q "^#"; then
        echo -e "${GREEN}‚úÖ Endpoint m√©triques accessible sans token${NC}"
        break
    else
        echo -e "${GRAY}   Tentative $attempt/$max_attempts...${NC}"
        sleep 5
        ((attempt++))
    fi
done

if [[ $attempt -gt $max_attempts ]]; then
    echo -e "${RED}‚ùå Endpoint m√©triques non accessible${NC}"
    
    # Debug
    echo -e "${CYAN}üîç Debug Gitea:${NC}"
    echo -e "${WHITE}Logs Gitea (10 derni√®res lignes):${NC}"
    docker logs gitea --tail 10
    
    echo -e "\n${WHITE}Configuration app.ini actuelle:${NC}"
    docker exec gitea cat /data/gitea/conf/app.ini 2>/dev/null || echo "Fichier non trouv√©"
else
    echo -e "${GREEN}üéâ Gitea configur√© avec succ√®s!${NC}"
fi

# Test depuis Prometheus
echo -e "\n${CYAN}üîç Test connectivit√© depuis Prometheus...${NC}"

if docker exec prometheus nc -z gitea 3000 2>/dev/null; then
    echo -e "${GREEN}‚úÖ gitea:3000 accessible depuis Prometheus${NC}"
    
    if docker exec prometheus wget -qO- "http://gitea:3000/metrics?token=prometheus-metrics-token" 2>/dev/null | head -1 | grep -q "^#"; then
        echo -e "${GREEN}‚úÖ M√©triques Gitea accessibles depuis Prometheus${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  M√©triques pas encore accessibles, test sans token...${NC}"
        if docker exec prometheus wget -qO- "http://gitea:3000/metrics" 2>/dev/null | head -1 | grep -q "^#"; then
            echo -e "${GREEN}‚úÖ M√©triques accessibles sans token${NC}"
        else
            echo -e "${RED}‚ùå M√©triques pas accessibles${NC}"
        fi
    fi
else
    echo -e "${RED}‚ùå gitea:3000 non accessible depuis Prometheus${NC}"
    echo -e "${YELLOW}üí° V√©rifiez les r√©seaux: ./manage-stack.sh check-networks${NC}"
fi

echo -e "\n${CYAN}üìã Configuration termin√©e${NC}"
echo -e "${WHITE}‚Ä¢ Gitea configur√© pour exposer les m√©triques${NC}"
echo -e "${WHITE}‚Ä¢ Endpoint: http://gitea:3000/metrics${NC}"
echo -e "${WHITE}‚Ä¢ Token (si n√©cessaire): prometheus-metrics-token${NC}"

echo -e "\n${YELLOW}‚è≠Ô∏è  Prochaines √©tapes:${NC}"
echo -e "${WHITE}1. V√©rifiez la target dans Prometheus${NC}"
echo -e "${WHITE}2. Si toujours DOWN: ./debug-gitea-docker.sh${NC}"
echo -e "${WHITE}3. Interface Gitea: https://gitea.wk-archi-o23b-4-5-g7.fr${NC}"
