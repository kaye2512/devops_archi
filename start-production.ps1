# Script de d√©marrage pour l'environnement de production WK-Archi
# Usage: .\start-production.ps1

Write-Host "üöÄ D√©marrage de la stack DevOps WK-Archi avec monitoring..." -ForegroundColor Green

# V√©rifier si Docker est en marche
try {
    docker version | Out-Null
    Write-Host "‚úÖ Docker est en marche" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker n'est pas en marche. Veuillez d√©marrer Docker Desktop." -ForegroundColor Red
    exit 1
}

# Se d√©placer dans le r√©pertoire du projet
Set-Location "e:\devops-platform"

# Cr√©er le r√©seau externe si n√©cessaire
Write-Host "üì° V√©rification du r√©seau tiptop-net..." -ForegroundColor Yellow
$networkExists = docker network ls --filter name=tiptop-net --format "{{.Name}}"
if (-not $networkExists) {
    Write-Host "üî® Cr√©ation du r√©seau tiptop-net..." -ForegroundColor Yellow
    docker network create tiptop-net
    Write-Host "‚úÖ R√©seau tiptop-net cr√©√©" -ForegroundColor Green
} else {
    Write-Host "‚úÖ R√©seau tiptop-net existe d√©j√†" -ForegroundColor Green
}

# V√©rifier les fichiers de configuration
Write-Host "üîç V√©rification de la configuration..." -ForegroundColor Yellow

$configFiles = @(
    ".\monitoring\prometheus.yml",
    ".\monitoring\alerts\rules.yml",
    ".\grafana\provisioning\datasources\datasource.yml",
    ".\grafana\provisioning\dashboards\dashboard.yml"
)

foreach ($file in $configFiles) {
    if (Test-Path $file) {
        Write-Host "‚úÖ $file" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $file manquant" -ForegroundColor Red
    }
}

# D√©marrer les services
Write-Host "üê≥ D√©marrage des conteneurs..." -ForegroundColor Yellow
docker-compose up -d

if ($LASTEXITCODE -eq 0) {
    Write-Host "`n‚úÖ Tous les services ont √©t√© d√©marr√©s avec succ√®s!" -ForegroundColor Green
    
    # Attendre que les services soient pr√™ts
    Write-Host "‚è≥ Attente du d√©marrage des services (30s)..." -ForegroundColor Yellow
    Start-Sleep -Seconds 30
    
    Write-Host "`nüåê Vos services sont maintenant disponibles:" -ForegroundColor Cyan
    Write-Host "  ‚Ä¢ Traefik Dashboard: https://traefik.wk-archi-023b-4-5-g7.fr" -ForegroundColor White
    Write-Host "  ‚Ä¢ Jenkins: https://jenkins.wk-archi-023b-4-5-g7.fr (local: http://localhost:8081)" -ForegroundColor White
    Write-Host "  ‚Ä¢ Gitea: https://gitea.wk-archi-023b-4-5-g7.fr" -ForegroundColor White
    Write-Host "  ‚Ä¢ Registry: https://registry.wk-archi-023b-4-5-g7.fr" -ForegroundColor White
    Write-Host "  ‚Ä¢ Prometheus: https://prometheus.wk-archi-023b-4-5-g7.fr (local: http://localhost:9090)" -ForegroundColor Magenta
    Write-Host "  ‚Ä¢ Grafana: https://grafana.wk-archi-023b-4-5-g7.fr (local: http://localhost:3001)" -ForegroundColor Magenta
    Write-Host "    ‚îî‚îÄ Identifiants: admin/admin" -ForegroundColor Gray
    
    Write-Host "`nüìä Services de monitoring locaux:" -ForegroundColor Cyan
    Write-Host "  ‚Ä¢ Node Exporter: http://localhost:9100" -ForegroundColor White
    Write-Host "  ‚Ä¢ cAdvisor: http://localhost:8080" -ForegroundColor White
    
    Write-Host "`nüîç V√©rification des targets Prometheus..." -ForegroundColor Yellow
    
    # V√©rifier l'√©tat des services
    Write-Host "`nüìã √âtat des conteneurs:" -ForegroundColor Cyan
    docker-compose ps
    
    Write-Host "`nüéØ Prochaines √©tapes:" -ForegroundColor Yellow
    Write-Host "  1. Acc√©dez √† Prometheus: https://prometheus.wk-archi-023b-4-5-g7.fr/targets" -ForegroundColor White
    Write-Host "     ‚îî‚îÄ V√©rifiez que tous les targets sont 'UP'" -ForegroundColor Gray
    Write-Host "  2. Acc√©dez √† Grafana: https://grafana.wk-archi-023b-4-5-g7.fr" -ForegroundColor White
    Write-Host "     ‚îî‚îÄ Connectez-vous avec admin/admin" -ForegroundColor Gray
    Write-Host "     ‚îî‚îÄ Le datasource Prometheus est pr√©-configur√©" -ForegroundColor Gray
    Write-Host "  3. Importez des dashboards recommand√©s:" -ForegroundColor White
    Write-Host "     ‚îî‚îÄ Node Exporter Full (ID: 1860)" -ForegroundColor Gray
    Write-Host "     ‚îî‚îÄ Docker Container Metrics (ID: 179)" -ForegroundColor Gray
    Write-Host "     ‚îî‚îÄ Traefik 2.0 Dashboard (ID: 11462)" -ForegroundColor Gray
    
    Write-Host "`nüö® IMPORTANT - S√©curit√©:" -ForegroundColor Red
    Write-Host "  ‚Ä¢ Changez le mot de passe Grafana par d√©faut (admin/admin)" -ForegroundColor Yellow
    Write-Host "  ‚Ä¢ V√©rifiez que vos certificats SSL sont bien g√©n√©r√©s" -ForegroundColor Yellow
    
} else {
    Write-Host "‚ùå Erreur lors du d√©marrage des services" -ForegroundColor Red
    Write-Host "üìã V√©rifiez les logs avec: docker-compose logs" -ForegroundColor Yellow
}

Write-Host "`nüìñ Pour plus d'informations, consultez PRODUCTION-CONFIG.md" -ForegroundColor Cyan
