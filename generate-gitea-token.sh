#!/bin/bash

# Script pour g√©n√©rer et configurer un token s√©curis√© pour Gitea
# Usage: ./generate-gitea-token.sh

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${CYAN}üîê G√©n√©ration d'un token s√©curis√© pour Gitea${NC}"

# G√©n√©rer un token al√©atoire s√©curis√©
NEW_TOKEN=$(openssl rand -hex 32)

if [[ -z "$NEW_TOKEN" ]]; then
    # Fallback si openssl n'est pas disponible
    NEW_TOKEN=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 64)
fi

echo -e "${GREEN}‚úÖ Token g√©n√©r√©: ${NEW_TOKEN}${NC}"

# Sauvegarder le token dans un fichier s√©curis√©
echo "GITEA_METRICS_TOKEN=${NEW_TOKEN}" > .env.gitea
chmod 600 .env.gitea

echo -e "${GREEN}‚úÖ Token sauvegard√© dans .env.gitea${NC}"

# Demander confirmation pour l'application
echo -e "\n${YELLOW}‚ö†Ô∏è  Application du nouveau token:${NC}"
echo -e "${WHITE}Voulez-vous remplacer le token actuel (prometheus-metrics-token) ?${NC}"
echo -e "${GRAY}Cela n√©cessitera de red√©marrer Gitea et Prometheus.${NC}"

read -p "Continuer ? (y/N): " -n 1 -r
echo

if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${CYAN}üîß Application du nouveau token...${NC}"
    
    # Mettre √† jour app.ini
    if docker ps --filter "name=gitea" --filter "status=running" | grep -q "gitea"; then
        docker exec gitea sed -i "s/TOKEN = .*/TOKEN = ${NEW_TOKEN}/" /data/gitea/conf/app.ini
        echo -e "${GREEN}‚úÖ app.ini mis √† jour${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Gitea non d√©marr√©, mise √† jour du fichier local...${NC}"
        sed -i "s/TOKEN = .*/TOKEN = ${NEW_TOKEN}/" gitea/app.ini
    fi
    
    # Mettre √† jour prometheus.yml
    sed -i "s/token: \['.*'\]/token: ['${NEW_TOKEN}']/" monitoring/prometheus.yml
    echo -e "${GREEN}‚úÖ prometheus.yml mis √† jour${NC}"
    
    # Red√©marrer les services
    echo -e "${CYAN}üîÑ Red√©marrage de Gitea et Prometheus...${NC}"
    docker restart gitea prometheus
    
    echo -e "${GREEN}üéâ Token s√©curis√© appliqu√© avec succ√®s !${NC}"
    
else
    echo -e "${YELLOW}‚è≠Ô∏è  Application annul√©e${NC}"
    echo -e "${CYAN}üí° Le token est disponible dans .env.gitea pour usage ult√©rieur${NC}"
fi

echo -e "\n${CYAN}üìã Informations du Token:${NC}"
echo -e "${WHITE}‚Ä¢ Token actuel: prometheus-metrics-token (basique)${NC}"
echo -e "${WHITE}‚Ä¢ Nouveau token: ${NEW_TOKEN} (s√©curis√©)${NC}"
echo -e "${WHITE}‚Ä¢ Fichier: .env.gitea${NC}"

echo -e "\n${CYAN}üß™ Tests:${NC}"
echo -e "${WHITE}# Ancien token (si toujours actif):${NC}"
echo -e "${GRAY}curl 'http://localhost:3000/metrics?token=prometheus-metrics-token'${NC}"

echo -e "\n${WHITE}# Nouveau token:${NC}"
echo -e "${GRAY}curl 'http://localhost:3000/metrics?token=${NEW_TOKEN}'${NC}"

echo -e "\n${CYAN}üìñ Documentation:${NC}"
echo -e "${WHITE}‚Ä¢ Le token prot√®ge l'acc√®s aux m√©triques Gitea${NC}"
echo -e "${WHITE}‚Ä¢ Prometheus l'utilise automatiquement${NC}"
echo -e "${WHITE}‚Ä¢ Changez-le r√©guli√®rement pour la s√©curit√©${NC}"
